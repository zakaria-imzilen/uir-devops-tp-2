version: "3.9"
networks: { infra-net: {} }
volumes:
  jenkins_home: {}
  postgres_data: {}
  sonarqube_data: {}
  sonarqube_extensions: {}
  grafana_data: {}
  prometheus_data: {}

services:
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    user: root
    ports: ["8081:8080","50000:50000"]
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks: [infra-net]

  postgres:
    image: postgres:15-alpine
    container_name: sonar-postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes: [ "postgres_data:/var/lib/postgresql/data" ]
    networks: [infra-net]

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    depends_on: [postgres]
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports: ["9000:9000"]
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks: [infra-net]

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    ports: ["9090:9090"]
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    extra_hosts:
      - "dockerhost:host-gateway"
    networks: [infra-net]

  grafana:
    image: grafana/grafana:10.4.5
    container_name: grafana
    ports: ["3000:3000"]
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes: [ "grafana_data:/var/lib/grafana" ]
    networks: [infra-net]
